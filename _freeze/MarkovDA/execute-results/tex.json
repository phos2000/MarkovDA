{
  "hash": "c59ffc6c6ce65c68fa1e4d179122c5a7",
  "result": {
    "markdown": "---\ntitle: \"How to Create Markov Model using R\"\nauthor: \"Astrid Yu, Ashley Leech\"\ndate: \"2023-03-01\"\nformat: \n  html: \n    toc: true\n    code-fold: show\n  pdf:\n    toc: true\n    code-block-bg: true\n---\n\n\n\n\n\n# Markov In-Class Exercise\n\nWe are tasked to examine the economic value of new treatments for a rare type of cancer. The new treatments were designed to increase the health of patients in remission & to prevent them from relapsing back to either Stage 1 or Stage 2.\n\n![](exercise/markov_diagram.png)\n\nBefore the new drugs development, the transition probabilities were the following:\n\n| Description                                                             | Probability |\n|-------------------------------------------------------------------------|-------------|\n| Probability of transition from Healthy to Stage 1                       | 5%          |\n| Probability of transition from Healthy to Stage 2                       | 2%          |\n| Probability of transition from Healthy to Stage 3                       | 1%          |\n| Probability of transition from Stage 1 to Stage 2                       | 10%         |\n| Probability of transition from Stage 1 to Remission                     | 25%         |\n| Probability of transition from Stage 2 to Stage 1                       | 5%          |\n| Probability of transition from Stage 2 to Stage 3                       | 15%         |\n| Probability of transition from Stage 2 to Remission                     | 20%         |\n| Probability of transition from Stage 3 to Stage 2                       | 5%          |\n| Probability of transition from Stage 3 to Death                         | 45%         |\n| Probability of transition from Remission to Stage 1                     | 10%         |\n| Probability of transition from Remission to Stage 2                     | 5%          |\n| Probability of transition from Remission to Stage 1 when on Treatment A | 10%         |\n| Probability of transition from Remission to Stage 2 when on Treatment A | 5%          |\n| Probability of transition from Remission to Stage 1 when on Treatment B | 8%          |\n| Probability of transition from Remission to Stage 2 when on Treatment B | 3%          |\n| Probability of transition from Remission to Stage 1 when on Treatment C | 5%          |\n| Probability of transition from Remission to Stage 2 when on Treatment C | 2%          |\n\nEach health state is associated with the following utilities:\n\n| Description                    | Utility |\n|--------------------------------|---------|\n| Utility of Healthy per cycle   | 1       |\n| Utility of Stage 1 per cycle   | 0.88    |\n| Utility of Stage 2 per cycle   | 0.71    |\n| Utility of Stage 3 per cycle   | 0.36    |\n| Utility of Remission per cycle | 0.95    |\n\nPatients in certain health states have to take medications and visit their treating physician on a regular basis:\n\n| Description                                | Costs / Other |\n|--------------------------------------------|---------------|\n| Number of visits per cycle in Stage 1      | 4             |\n| Number of visits per cycle in Stage 2      | 12            |\n| Number of visits per cycle in Stage 3      | 52            |\n| Number of visits per cycle in Remission    | 1             |\n| Cost of a visit                            | \\$ 100        |\n| Cost of treatment per cycle in Stage 1     | \\$ 1,200      |\n| Cost of treatment per cycle in Stage 2     | \\$ 6,000      |\n| Cost of treatment per cycle in Stage 3     | \\$ 18,000     |\n| Cost of status quo per cycle in Remission  | \\$ 400        |\n| Cost of Treatment A per cycle in Remission | \\$ 10,000     |\n| Cost of Treatment B per cycle in Remission | \\$ 7,500      |\n| Cost of Treatment C per cycle in Remission | \\$ 12,500     |\n\nAssume an annual discount rate of 3% and a 30-year time horizon.\n\n::: callout-note\n**What You Need to Prepare:**\n\n1.  the Exercise excel file: we have the initial values for all the parameters and the procedures displayed in the excel formula.\n2.  the Function R file: it includes some advanced and long functions for the process. Lots of the functions are included in the *dampack* R package.\n3.  R Studio or R. -- I highly recommende you to use R Studio\n:::\n\n# Step 1: Parameterize the Model\n\nHere we use the excel to upload all the parameters provided in the excel.\n\nAnother ways is to define the parameters directly in the R.\n\nWe get a list of parameters named *param_sc*.\n\n\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n\\begin{tabular}{l|l}\n\\hline\ntype & prefix\\\\\n\\hline\nProbability & p\\_\\\\\n\\hline\nRate & r\\_\\\\\n\\hline\nMatrix & m\\_\\\\\n\\hline\nCost & c\\_\\\\\n\\hline\nUtility & u\\_\\\\\n\\hline\nHazard Ratio & hr\\_\\\\\n\\hline\n\\end{tabular}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninput_file = normalizePath(here(\"exercise/markov_exercise.xlsx\"))\ninput_raw = readxl::read_xlsx(input_file,sheet=\"Parameters\")[,1:7]\nparams_sc = input_raw %>% \n  select(`Variable name`, Value) %>%\n  na.omit() %>%\n  deframe() %>%\n  as.list()\n# list2env(params_sc, envir=.GlobalEnv)\n\nv_names_states = str_sub(names(as_tibble(params_sc) %>% select(starts_with(\"u\"))), 2, -1)\nv_n_states <- length(v_names_states)\nv_names_str = c(\"quo\", str_c(\"t\",str_sub(names(as_tibble(params_sc) %>% select(starts_with(\"cTrt\"))), 3, -1)))\nn_strategies <- length(v_names_str)\n\noptions(\"scipen\"=1000, \"digits\"=2)\n\nt(as_tibble(params_sc)) %>%\n  kable(caption = \"input params from excel\") %>%\n  kable_styling() %>%\n  scroll_box(height = \"400px\")\n```\n\n::: {.cell-output-display}\n\\begin{table}\n\n\\caption{\\label{tab:input-excel}input params from excel}\n\\centering\n\\begin{tabular}[t]{l|r}\n\\hline\nnPop & 1000.00\\\\\n\\hline\nn\\_cycles & 30.00\\\\\n\\hline\ncycle\\_length & 1.00\\\\\n\\hline\nwtp & 5200.00\\\\\n\\hline\ndiscount\\_rate & 0.03\\\\\n\\hline\npHealthyStage1 & 0.05\\\\\n\\hline\npHealthyStage2 & 0.02\\\\\n\\hline\npHealthyStage3 & 0.01\\\\\n\\hline\npStage1Stage2 & 0.10\\\\\n\\hline\npStage1Remission & 0.25\\\\\n\\hline\npStage2Stage1 & 0.05\\\\\n\\hline\npStage2Stage3 & 0.15\\\\\n\\hline\npStage2Remission & 0.20\\\\\n\\hline\npStage3Stage2 & 0.05\\\\\n\\hline\npStage3Death & 0.45\\\\\n\\hline\npRemissionStage1 & 0.10\\\\\n\\hline\npRemissionStage2 & 0.05\\\\\n\\hline\npRemissionStage1\\_trtA & 0.02\\\\\n\\hline\npRemissionStage2\\_trtA & 0.01\\\\\n\\hline\npRemissionStage1\\_trtB & 0.08\\\\\n\\hline\npRemissionStage2\\_trtB & 0.03\\\\\n\\hline\npRemissionStage1\\_trtC & 0.05\\\\\n\\hline\npRemissionStage2\\_trtC & 0.02\\\\\n\\hline\nrHealthyStage1 & 0.05\\\\\n\\hline\nrHealthyStage2 & 0.02\\\\\n\\hline\nrHealthyStage3 & 0.01\\\\\n\\hline\nrStage1Stage2 & 0.12\\\\\n\\hline\nrStage1Remission & 0.31\\\\\n\\hline\nrStage2Stage1 & 0.06\\\\\n\\hline\nrStage2Stage3 & 0.19\\\\\n\\hline\nrStage2Remission & 0.26\\\\\n\\hline\nrStage3Stage2 & 0.07\\\\\n\\hline\nrStage3Death & 0.62\\\\\n\\hline\nrRemissionStage1 & 0.11\\\\\n\\hline\nrRemissionStage2 & 0.05\\\\\n\\hline\nhrRemissionStage1\\_trtA & 0.19\\\\\n\\hline\nhrRemissionStage2\\_trtA & 0.19\\\\\n\\hline\nhrRemissionStage1\\_trtB & 0.78\\\\\n\\hline\nhrRemissionStage2\\_trtB & 0.59\\\\\n\\hline\nhrRemissionStage1\\_trtC & 0.48\\\\\n\\hline\nhrRemissionStage2\\_trtC & 0.38\\\\\n\\hline\nnVisitsStage1 & 4.00\\\\\n\\hline\nnVisitsStage2 & 12.00\\\\\n\\hline\nnVisitsStage3 & 52.00\\\\\n\\hline\nnVisitsRemission & 1.00\\\\\n\\hline\ncVisit & 100.00\\\\\n\\hline\ncTreatmentStage1 & 1200.00\\\\\n\\hline\ncTreatmentStage2 & 6000.00\\\\\n\\hline\ncTreatmentStage3 & 18000.00\\\\\n\\hline\ncTreatmentRemission & 400.00\\\\\n\\hline\ncTrtA & 10000.00\\\\\n\\hline\ncTrtB & 7500.00\\\\\n\\hline\ncTrtC & 12500.00\\\\\n\\hline\nuHealthy & 1.00\\\\\n\\hline\nuStage1 & 0.88\\\\\n\\hline\nuStage2 & 0.71\\\\\n\\hline\nuStage3 & 0.36\\\\\n\\hline\nuRemission & 0.95\\\\\n\\hline\nuDeath & 0.00\\\\\n\\hline\n\\end{tabular}\n\\end{table}\n:::\n:::\n\n\n\n# Step 2: Matrices\n\nWith all the probabilities for transitions among all the stages, we'd like to build a transition probability matrix which would contribute to building Markov model traces later.\n\nHowever, we might not have all the probabilities at the beginning. We also mention how to change rates into probabilities here.\n\n## If All Probabilities Known (No Rate-to-Probabilities Transitions)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuild_matrices <- function(params, mtype) {\n  m_X = list()\n  for (m in v_names_str){\n    m_X_ = matrix(0, nrow = v_n_states, ncol = v_n_states, dimnames = list(v_names_states,v_names_states))\n    for (i in rownames(m_X_)) {\n      for (j in colnames(m_X_)) {\n        if (paste0(mtype,i,j) %in% names(params)) {\n          m_X_[i,j] = as.numeric(params[paste0(mtype,i,j)])\n        }\n      }\n    }\n    \n    if (mtype == \"p\") {\n      ## if drawing the probabilities from the given parameters and building a probability matrix\n      \n      if (paste0(\"pRemissionStage1_\",m) %in% names(params)) {\n        ## the relapse probs change over the strategies. A special rule here. \n        m_X_[\"Remission\",\"Stage1\"] = as.numeric(params[paste0(\"pRemissionStage1_\",m)])\n        m_X_[\"Remission\",\"Stage2\"] = as.numeric(params[paste0(\"pRemissionStage2_\",m)])\n      }\n        \n      for (n in 1:v_n_states) {\n        m_X_[n,n] = 1-sum(m_X_[n,])\n      }\n    } else {\n      ## if drawing the rates from the given paramters and building a rate matrix\n      \n      if (paste0(\"hrRemissionStage1_\",m) %in% names(params)) {\n        ## use the hazard ratios to adjust the relapse rates over the strategies. \n        m_X_[\"Remission\",\"Stage1\"] = m_X_[\"Remission\",\"Stage1\"] * as.numeric(params[paste0(\"hrRemissionStage1_\",m)])\n        m_X_[\"Remission\",\"Stage2\"] = m_X_[\"Remission\",\"Stage2\"] * as.numeric(params[paste0(\"hrRemissionStage2_\",m)])\n      }\n        \n      for (n in 1:v_n_states) {\n        m_X_[n,n] = -sum(m_X_[n,])\n      }\n    }\n    m_X[[m]] = m_X_\n  }\n  m_X\n}\n    \nm_P = build_matrices(params_sc, \"p\")\n\nm_P\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$quo\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.10   0.05   0.00      0.85  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtA\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.02   0.01   0.00      0.97  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtB\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.08   0.03   0.00      0.89  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtC\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.05   0.02   0.00      0.93  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n```\n:::\n:::\n\n\n\nIf having a rate matrix instead of all the probabilities, there are two ways to convert it to a probability matrix.\n\n## Rate-to-Probability Conversion Formulas\n\n\n\n$$\np_{HealthyStage1}= \\frac{r_{HealthyStage1}}{r_{HealthyStage1}+r_{HealthyStage2}+r_{HealthyStage3}}\\big ( 1 - e^{-(r_{HealthyStage1}+r_{HealthyStage2}+r_{HealthyStage3})\\Delta t}\\big )\n$$\n\n$$\np_{HealthyHealthy} = e^{-(r_{HealthyStage1}+r_{HealthyStage2}+r_{HealthyStage3})\\Delta t}\n$$\n\n\n\nIn the above formulas, `r_*` is a transition rate and $\\Delta t$ is the timestep, which in the Excel document is set to a value of 1 and stored in the variable `n_cycle_length`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_P_form = list()\nm_P_ = matrix(0, nrow = v_n_states, ncol = v_n_states, dimnames = list(v_names_states,v_names_states))\n\nfor (i in v_names_states) {\n  tempsum = sum(as_tibble(params_sc) %>% select(starts_with(paste0(\"r\",i))))\n  for (j in v_names_states) {\n    if (paste0(\"r\",i,j) %in% names(params_sc)) {\n      ptemp = params_sc[[paste0(\"r\",i,j)]] * (1 - exp(-tempsum)) / tempsum\n    } else if (j == i) {\n      ptemp = exp(-tempsum)\n    } else {\n      ptemp = 0\n    }\n    m_P_[i,j] = ptemp\n  }\n}\nm_P_form[[v_names_str[1]]] = m_P_\n\nfor (str in v_names_str[2:4]) {\n  params_sc[[paste0(\"rRemissionStage1_\",str)]] = params_sc$rRemissionStage1 * params_sc[[paste0(\"hrRemissionStage1_\",str)]]\n  params_sc[[paste0(\"rRemissionStage2_\",str)]] = params_sc$rRemissionStage2 * params_sc[[paste0(\"hrRemissionStage2_\",str)]]\n  m_P_form[[str]] = m_P_\n  tempsum = params_sc[[paste0(\"rRemissionStage1_\",str)]] + params_sc[[paste0(\"rRemissionStage2_\",str)]]\n  m_P_form[[str]][\"Remission\", \"Stage1\"] = params_sc[[paste0(\"rRemissionStage1_\",str)]] * (1 - exp(-tempsum)) / tempsum\n  m_P_form[[str]][\"Remission\", \"Stage2\"] = params_sc[[paste0(\"rRemissionStage2_\",str)]] * (1 - exp(-tempsum)) / tempsum\n  m_P_form[[str]][\"Remission\", \"Remission\"] = exp(-tempsum)\n}\n\nm_P_form\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$quo\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.10   0.05   0.00      0.85  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtA\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.02   0.01   0.00      0.97  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtB\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.08   0.03   0.00      0.89  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n\n$trtC\n          Healthy Stage1 Stage2 Stage3 Remission Death\nHealthy      0.92   0.05   0.02   0.01      0.00  0.00\nStage1       0.00   0.65   0.10   0.00      0.25  0.00\nStage2       0.00   0.05   0.60   0.15      0.20  0.00\nStage3       0.00   0.00   0.05   0.50      0.00  0.45\nRemission    0.00   0.05   0.02   0.00      0.93  0.00\nDeath        0.00   0.00   0.00   0.00      0.00  1.00\n```\n:::\n:::\n\n\n\n## Rate-to-Probability Matrix Exponentiation\n\nInstead of converting the rates one-by-one, matrix exponentiation is a quicker way to convert all.\n\nConsidering the covariance of the rates here, it is also more accurate.\n\nHowever, if we have both rates and probabilities mixed, there will be two steps:\n\n1.  convert all the probabilities to rates using the conversion formula;\n\n2.  use the matrix exponentiation to convert the rate matrix to the probability matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_R = build_matrices(params_sc, \"r\")\nm_P_expm = list()\nfor (m in v_names_str){\n  m_P_expm[[m]] = expm(m_R[[m]])\n}\nm_P_expm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$quo\n          Healthy Stage1 Stage2 Stage3 Remission   Death\nHealthy      0.92 0.0413  0.018 0.0086    0.0088 0.00287\nStage1       0.00 0.6649  0.084 0.0072    0.2425 0.00170\nStage2       0.00 0.0500  0.611 0.1057    0.1923 0.04056\nStage3       0.00 0.0015  0.038 0.5035    0.0058 0.45087\nRemission    0.00 0.0827  0.044 0.0036    0.8689 0.00082\nDeath        0.00 0.0000  0.000 0.0000    0.0000 1.00000\n\n$trtA\n          Healthy Stage1 Stage2  Stage3 Remission   Death\nHealthy      0.92 0.0411 0.0182 0.00864    0.0092 0.00287\nStage1       0.00 0.6549 0.0784 0.00693    0.2581 0.00165\nStage2       0.00 0.0420 0.6072 0.10550    0.2048 0.04052\nStage3       0.00 0.0013 0.0382 0.50354    0.0061 0.45087\nRemission    0.00 0.0165 0.0088 0.00071    0.9739 0.00016\nDeath        0.00 0.0000 0.0000 0.00000    0.0000 1.00000\n\n$trtB\n          Healthy Stage1 Stage2 Stage3 Remission  Death\nHealthy      0.92 0.0413  0.018 0.0086    0.0089 0.0029\nStage1       0.00 0.6624  0.081 0.0071    0.2478 0.0017\nStage2       0.00 0.0479  0.609 0.1056    0.1965 0.0405\nStage3       0.00 0.0015  0.038 0.5035    0.0059 0.4509\nRemission    0.00 0.0659  0.027 0.0022    0.9041 0.0005\nDeath        0.00 0.0000  0.000 0.0000    0.0000 1.0000\n\n$trtC\n          Healthy Stage1 Stage2 Stage3 Remission   Death\nHealthy      0.92 0.0412  0.018 0.0086    0.0091 0.00287\nStage1       0.00 0.6586  0.080 0.0070    0.2530 0.00167\nStage2       0.00 0.0449  0.608 0.1056    0.2007 0.04053\nStage3       0.00 0.0014  0.038 0.5035    0.0060 0.45087\nRemission    0.00 0.0412  0.018 0.0014    0.9390 0.00033\nDeath        0.00 0.0000  0.000 0.0000    0.0000 1.00000\n```\n:::\n:::\n\n\n\n# Step 3: Payoffs\n\nHere we also try to build a matrix of payoffs which helps calculating the costs and QALYs for the traces.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuild_payoffs = function(params){\n  payoffs = list()\n  cost_basic = c()\n  cost_basic[\"Healthy\"] = 0\n  for (i in v_names_states[2:(v_n_states-1)]) {\n    cost_basic[i] = as.numeric(params[paste0(\"cTreatment\",i)]) + as.numeric(params[paste0(\"nVisits\",i)]) * params$cVisit\n  }\n  cost_basic[\"Death\"] = 0\n\n  payoffs[[\"quo\"]] = matrix(c(cost_basic, as_vector(as_tibble(params) %>% select(starts_with(\"u\")))),\n                      nrow = 2, ncol = 6, byrow = TRUE, dimnames = list(c(\"costs\", \"qalys\"), v_names_states))\n  for (m in v_names_str[2:n_strategies]) {\n    payoffs[[m]] = payoffs[[\"quo\"]]\n    payoffs[[m]][\"costs\",\"Remission\"] = payoffs[[m]][\"costs\",\"Remission\"] + as.numeric(params[paste0(\"cT\",str_sub(m,2,-1))]) - as.numeric(params[paste0(\"cTreatment\",\"Remission\")])\n  }\n  payoffs\n}\n\npayoffs = build_payoffs(params_sc)\npayoffs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$quo\n      Healthy  Stage1  Stage2   Stage3 Remission Death\ncosts       0 1600.00 7200.00 23200.00    500.00     0\nqalys       1    0.88    0.71     0.36      0.95     0\n\n$trtA\n      Healthy  Stage1  Stage2   Stage3 Remission Death\ncosts       0 1600.00 7200.00 23200.00  10100.00     0\nqalys       1    0.88    0.71     0.36      0.95     0\n\n$trtB\n      Healthy  Stage1  Stage2   Stage3 Remission Death\ncosts       0 1600.00 7200.00 23200.00   7600.00     0\nqalys       1    0.88    0.71     0.36      0.95     0\n\n$trtC\n      Healthy  Stage1  Stage2   Stage3 Remission Death\ncosts       0 1600.00 7200.00 23200.00  12600.00     0\nqalys       1    0.88    0.71     0.36      0.95     0\n```\n:::\n:::\n\n\n\n# Step 4: Markov Traces\n\nOver the 30-year simulation, we'd like to know how the individuals transit among the states, with the probability matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuild_traces = function(params){\n  m_P = build_matrices(params, \"p\")\n  \n  l_m_M <-\n    m_P %>%\n    map(~({\n      tmp <- .x[1,] %>% as.matrix() %>% t()\n      tmp <- matrix(0,ncol=(ncol(tmp)),nrow=(params$n_cycles+1),dimnames = list(paste0(0:params$n_cycles),colnames(.x)))\n      tmp[1,1] <- params$nPop\n      tmp\n    }))\n\n  for (t in 1:params$n_cycles) {\n    res <-\n      map2(l_m_M,m_P,~({\n        .x[paste0(t-1),] %*% .y\n      }))\n    l_m_M <-\n      map2(l_m_M,res,~({\n        .x[paste0(t),] <- .y\n        .x\n      }))\n  }\n  l_m_M\n}\n\nl_m_M = build_traces(params_sc)\nl_m_M\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$quo\n   Healthy Stage1 Stage2 Stage3 Remission Death\n0     1000      0      0      0         0   0.0\n1      920     50     20     10         0   0.0\n2      846     80     36     17        16   4.5\n3      779     97     48     22        41  12.2\n4      716    109     57     26        69  22.3\n5      659    116     64     29        97  34.1\n6      606    121     70     31       125  47.1\n7      558    125     74     32       150  60.9\n8      513    128     77     33       174  75.3\n9      472    130     80     33       195  90.0\n10     434    132     82     33       214 104.8\n11     400    133     83     33       231 119.7\n12     368    134     84     33       247 134.7\n13     338    134     85     33       260 149.5\n14     311    134     86     33       271 164.3\n15     286    134     86     32       282 179.0\n16     263    134     87     32       290 193.6\n17     242    134     87     32       298 208.0\n18     223    133     87     31       304 222.2\n19     205    132     87     31       309 236.3\n20     189    132     86     30       313 250.2\n21     174    131     86     30       316 263.9\n22     160    129     85     30       318 277.4\n23     147    128     85     29       320 290.8\n24     135    127     84     29       321 303.9\n25     124    126     83     28       321 316.9\n26     114    124     83     28       321 329.6\n27     105    123     82     27       321 342.2\n28      97    121     81     27       320 354.6\n29      89    120     80     27       318 366.7\n30      82    118     79     26       316 378.7\n\n$trtA\n   Healthy Stage1 Stage2 Stage3 Remission Death\n0     1000      0      0      0         0   0.0\n1      920     50     20     10         0   0.0\n2      846     80     36     17        16   4.5\n3      779     96     47     22        43  12.2\n4      716    105     55     26        75  22.3\n5      659    108     60     29       110  34.1\n6      606    108     63     30       146  46.9\n7      558    107     63     30       181  60.4\n8      513    104     63     30       215  74.0\n9      472    101     62     30       247  87.6\n10     434     97     61     29       278 101.0\n11     400     93     59     28       306 114.1\n12     368     90     57     27       332 126.6\n13     338     86     55     26       356 138.7\n14     311     83     53     25       378 150.3\n15     286     80     52     23       398 161.3\n16     263     77     50     22       416 171.8\n17     242     74     48     21       433 181.9\n18     223     71     46     20       448 191.4\n19     205     69     45     19       461 200.5\n20     189     66     44     18       474 209.2\n21     174     64     42     18       485 217.5\n22     160     62     41     17       495 225.5\n23     147     60     40     16       504 233.1\n24     135     59     39     16       512 240.4\n25     124     57     38     15       519 247.4\n26     114     56     37     14       525 254.1\n27     105     54     36     14       530 260.5\n28      97     53     35     13       535 266.7\n29      89     52     34     13       539 272.7\n30      82     51     34     12       543 278.6\n\n$trtB\n   Healthy Stage1 Stage2 Stage3 Remission Death\n0     1000      0      0      0         0   0.0\n1      920     50     20     10         0   0.0\n2      846     80     36     17        16   4.5\n3      779     97     48     22        42  12.2\n4      716    108     56     26        71  22.3\n5      659    114     62     29       101  34.1\n6      606    119     66     30       131  47.0\n7      558    121     69     31       160  60.7\n8      513    123     71     32       186  74.7\n9      472    124     72     32       211  88.9\n10     434    125     73     31       233 103.1\n11     400    125     74     31       253 117.3\n12     368    125     74     31       271 131.2\n13     338    125     74     30       288 145.0\n14     311    125     74     29       302 158.5\n15     286    125     74     29       315 171.7\n16     263    124     73     28       326 184.8\n17     242    124     73     28       336 197.5\n18     223    123     72     27       344 210.0\n19     205    122     72     27       352 222.3\n20     189    121     71     26       358 234.3\n21     174    121     71     26       363 246.1\n22     160    120     70     25       368 257.6\n23     147    119     70     25       371 269.0\n24     135    118     69     24       374 280.1\n25     124    117     68     24       376 291.0\n26     114    115     68     23       377 301.7\n27     105    114     67     23       378 312.2\n28      97    113     66     23       379 322.6\n29      89    112     65     22       379 332.7\n30      82    111     65     22       378 342.7\n\n$trtC\n   Healthy Stage1 Stage2 Stage3 Remission Death\n0     1000      0      0      0         0   0.0\n1      920     50     20     10         0   0.0\n2      846     80     36     17        16   4.5\n3      779     97     48     22        42  12.2\n4      716    106     56     26        73  22.3\n5      659    111     61     29       106  34.1\n6      606    114     65     30       138  47.0\n7      558    114     67     31       170  60.5\n8      513    114     67     31       200  74.4\n9      472    113     68     31       228  88.3\n10     434    112     67     30       254 102.1\n11     400    111     67     30       278 115.7\n12     368    109     66     29       299 129.0\n13     338    108     65     28       319 142.0\n14     311    106     65     27       336 154.6\n15     286    105     64     26       352 166.9\n16     263    103     63     26       366 178.7\n17     242    102     62     25       379 190.3\n18     223    100     61     24       390 201.5\n19     205     99     60     23       400 212.3\n20     189     98     59     23       409 222.8\n21     174     96     58     22       417 233.1\n22     160     95     58     22       423 243.1\n23     147     94     57     21       429 252.8\n24     135     93     56     20       434 262.2\n25     124     91     55     20       438 271.4\n26     114     90     55     20       441 280.4\n27     105     89     54     19       443 289.2\n28      97     88     53     19       445 297.8\n29      89     87     52     18       447 306.2\n30      82     86     52     18       448 314.4\n```\n:::\n:::\n\n\n\n# Step 5: Total Costs and Qalys\n\nWith the payoff matrices and Markov traces, we can get the discounted & adjusted costs and QALYs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Discount weight for costs and effects ----\n\nget_ce = function(l_m_M, payoffs, params){\n  v_dwc  <- 1 / ((1 + (params$discount_rate * params$cycle_length)) ^ (0:params$n_cycles))\n  v_dwe  <- 1 / ((1 + (params$discount_rate * params$cycle_length)) ^ (0:params$n_cycles))\n  ## Within-cycle correction (WCC) using Simpson's 1/3 rule ----\n  # Function included in \"Functions_markov.R\"\n  v_wcc <- gen_wcc(n_cycles = params$n_cycles,\n                 method = \"Simpson1/3\") # vector of wcc\n  \n  v_tot_qaly <-\n    map2(l_m_M, payoffs,~({\n      v_u_str <- .y[\"qalys\",v_names_states] %>% as.vector()\n      t(.x[,v_names_states] %*% v_u_str) %*% (v_dwe * v_wcc)\n    })) %>%\n    unlist()\n\n  v_tot_cost <-\n    map2(l_m_M, payoffs,~({\n      v_c_str <- .y[\"costs\",v_names_states] %>% as.vector()\n      t(.x[,v_names_states] %*% v_c_str) %*% (v_dwc * v_wcc)\n    })) %>%\n    unlist()\n  \n  ce=list()\n  ce[[\"discounted_weight_of_cost\"]] = v_dwc\n  ce[[\"discounted_weight_of_qaly\"]] = v_dwe\n  ce[[\"Within_cycle_correction\"]] = v_dwc\n  ce[[\"cost\"]] = v_tot_cost\n  ce[[\"qaly\"]] = v_tot_qaly\n  \n  ce\n}\n\ntot_ce = get_ce(l_m_M = build_traces(params_sc), payoffs = build_payoffs(params_sc), params = params_sc)\ntot_ce\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$discounted_weight_of_cost\n [1] 1.00 0.97 0.94 0.92 0.89 0.86 0.84 0.81 0.79 0.77 0.74 0.72 0.70 0.68 0.66\n[16] 0.64 0.62 0.61 0.59 0.57 0.55 0.54 0.52 0.51 0.49 0.48 0.46 0.45 0.44 0.42\n[31] 0.41\n\n$discounted_weight_of_qaly\n [1] 1.00 0.97 0.94 0.92 0.89 0.86 0.84 0.81 0.79 0.77 0.74 0.72 0.70 0.68 0.66\n[16] 0.64 0.62 0.61 0.59 0.57 0.55 0.54 0.52 0.51 0.49 0.48 0.46 0.45 0.44 0.42\n[31] 0.41\n\n$Within_cycle_correction\n [1] 1.00 0.97 0.94 0.92 0.89 0.86 0.84 0.81 0.79 0.77 0.74 0.72 0.70 0.68 0.66\n[16] 0.64 0.62 0.61 0.59 0.57 0.55 0.54 0.52 0.51 0.49 0.48 0.46 0.45 0.44 0.42\n[31] 0.41\n\n$cost\n     quo     trtA     trtB     trtC \n28610742 77860260 58629019 86249961 \n\n$qaly\n  quo  trtA  trtB  trtC \n15291 15946 15526 15714 \n```\n:::\n:::\n\n\n\n# Step 6: CEA results and ICERs\n\nAs we have got the costs and QALYs for every strategy, we calculate the ICERs for them and compared.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Compare different strategies with icers\n# Function also included in \"Functions_markov.R\"\ncalculate_icers <- function(cost, effect, strategies) {\n  # checks on input\n  n_cost <- length(cost)\n  n_eff <- length(effect)\n  n_strat <- length(strategies)\n  if (n_cost != n_eff | n_eff != n_strat) {\n    stop(\"cost, effect, and strategies must all be vectors of the same length\", call. = FALSE)\n  }\n\n  # coerce to character, in case they are provided as numeric\n  char_strat <- as.character(strategies)\n\n  # create data frame to hold data\n  df <- data.frame(\"Strategy\" = char_strat,\n                   \"Cost\" = cost,\n                   \"Effect\" = effect,\n                   stringsAsFactors = FALSE)\n  nstrat <- nrow(df)\n\n  # if only one strategy was provided, return df with NAs for incremental\n  if (nstrat == 1) {\n    df[, c(\"ICER\", \"Inc_Cost\", \"Inc_Effect\")] <- NA\n    return(df)\n  }\n\n  # three statuses: dominated, extended dominated, and non-dominated\n  d <- NULL\n\n  # detect dominated strategies\n  # dominated strategies have a higher cost and lower effect\n  df <- df %>%\n    arrange(.data$Cost, desc(.data$Effect))\n\n  # iterate over strategies and detect (strongly) dominated strategies\n  # those with higher cost and equal or lower effect\n  for (i in 1:(nstrat - 1)) {\n    ith_effect <- df[i, \"Effect\"]\n    for (j in (i + 1):nstrat) {\n      jth_effect <- df[j, \"Effect\"]\n      if (jth_effect <= ith_effect) {\n        # append dominated strategies to vector\n        d <- c(d, df[j, \"Strategy\"])\n      }\n    }\n  }\n\n  # detect weakly dominated strategies (extended dominance)\n  # this needs to be repeated until there are no more ED strategies\n  ed <- vector()\n  continue <- TRUE  # ensure that the loop is run at least once\n  while (continue) {\n    # vector of all dominated strategies (strong or weak)\n    dom <- union(d, ed)\n\n    # strategies declared to be non-dominated at this point\n    nd <- setdiff(strategies, dom)\n\n    # compute icers for nd strategies\n    nd_df <- df[df$Strategy %in% nd, ] %>%\n      compute_icers()\n\n    # number non-d\n    n_non_d <- nrow(nd_df)\n\n    # if only two strategies left, we're done\n    if (n_non_d <= 2) {\n      break\n    }\n\n    # strategy identifiers for non-d\n    nd_strat <- nd_df$Strategy\n\n    # now, go through non-d strategies and detect any\n    # with higher ICER than following strategy\n    ## keep track of whether any ED strategies are picked up\n    # if not, we're done - exit the loop\n    new_ed <- 0\n    for (i in 2:(n_non_d - 1)) {\n      if (nd_df[i, \"ICER\"] > nd_df[i + 1, \"ICER\"]) {\n        ed <- c(ed, nd_strat[i])\n        new_ed <- new_ed + 1\n      }\n    }\n    if (new_ed == 0) {\n      continue <- FALSE\n    }\n  }\n\n  # recompute icers without weakly dominated strategies\n  nd_df_icers <- nd_df[!(nd_df$Strategy %in% dom), ] %>%\n    mutate(Status = \"ND\") %>%\n    compute_icers()\n\n  # dominated and weakly dominated\n  d_df <- df[df$Strategy %in% d, ] %>%\n    mutate(ICER = NA, Status = \"D\")\n\n  ed_df <- df[df$Strategy %in% ed, ] %>%\n    mutate(ICER = NA, Status = \"ED\")\n\n  # when combining, sort so we have ref,ND,ED,D\n  results <- bind_rows(d_df, ed_df, nd_df_icers) %>%\n    arrange(desc(.data$Status), .data$Cost, desc(.data$Effect))\n\n  # re-arrange columns\n  results <- results %>%\n    select(.data$Strategy, .data$Cost, .data$Effect,\n           .data$Inc_Cost, .data$Inc_Effect, .data$ICER, .data$Status)\n\n  # declare class of results\n  class(results) <- c(\"icers\", \"data.frame\")\n  return(results)\n}\n\ndf_cea <- calculate_icers(cost       = tot_ce$cost,\n                          effect     = tot_ce$qaly,\n                          strategies = v_names_str)\ndf_cea\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Strategy     Cost Effect Inc_Cost Inc_Effect  ICER Status\nquo       quo 28610742  15291       NA         NA    NA     ND\ntrtA     trtA 77860260  15946 49249517        655 75174     ND\ntrtB     trtB 58629019  15526       NA         NA    NA     ED\ntrtC     trtC 86249961  15714       NA         NA    NA      D\n```\n:::\n:::\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n\\begin{tabular}{l|l}\n\\hline\nStatus & Descriptiion\\\\\n\\hline\nD & Dominated\\\\\n\\hline\nND & Not Dominated\\\\\n\\hline\nED & Extended Dominated\\\\\n\\hline\n\\end{tabular}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## display a table for CEA outputs\n# Function included in \"Functions_markov.R\"\ntable_cea <- format_table_cea(df_cea) \ntable_cea\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Strategy  Costs ($) QALYs Incremental Costs ($) Incremental QALYs\nquo       quo 28,610,742 15291                  <NA>                NA\ntrtA     trtA 77,860,260 15946            49,249,517               655\ntrtB     trtB 58,629,019 15526                  <NA>                NA\ntrtC     trtC 86,249,961 15714                  <NA>                NA\n     ICER ($/QALY) Status\nquo           <NA>     ND\ntrtA        75,174     ND\ntrtB          <NA>     ED\ntrtC          <NA>      D\n```\n:::\n\n```{.r .cell-code}\n## CEA frontier -----\n# depends on the `ggplot2`  and `ggrepel` packages.\n# Function included in \"Functions_markov.R\"\nplot(df_cea, label = \"all\", txtsize = 16) +\n  expand_limits(x = max(table_cea$QALYs) + 0.1) +\n  theme(legend.position = c(0.8, 0.2))\n```\n\n::: {.cell-output-display}\n![](MarkovDA_files/figure-pdf/cea-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n# Step 7: One-way Sensitive Analysis\n\nUse owsa() function in the dampack package to create the one-way sensitive analysis and tornado plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set lower & upper case for cTrtA\n# params_lower = params_upper  = params_sc\n# params_lower$cTrtA = 8000\n# params_upper$cTrtA = 10500\n# \n# result8000 = calculate_icers(cost       = get_ce(params_lower)$cost,\n#                 effect     = get_ce(params_lower)$qaly,\n#                 strategies = v_names_str)\n# \n# result10500 = calculate_icers(cost       = get_ce(params_upper)$cost,\n#                 effect     = get_ce(params_upper)$qaly,\n#                 strategies = v_names_str)\n# \n# # set lower & upper case for pStage3Death\n# params_lower = params_upper  = params_sc\n# params_lower$pStage3Death = 0.44\n# params_upper$pStage3Death = 0.5\n# \n# calculate_icers(cost       = get_ce(params_lower)$cost,\n#                 effect     = get_ce(params_lower)$qaly,\n#                 strategies = v_names_str)\n# \n# calculate_icers(cost       = get_ce(params_upper)$cost,\n#                 effect     = get_ce(params_upper)$qaly,\n#                 strategies = v_names_str)\n\n\n#dampack_dsa\n\nsimulate_strategies = function(params, wtp = params_sc$wtp) {\n  # Create cost-effectiveness results data frame\n  # LY is the total dicounted life-years, here will not use. \n  df_ce <- data.frame(Strategy = v_names_str,\n                      Cost = numeric(n_strategies),\n                      QALY = numeric(n_strategies),\n                      stringsAsFactors = FALSE)\n\n  result = calculate_icers(cost = get_ce(l_m_M = build_traces(params), payoffs = build_payoffs(params), params)$cost,\n                           effect = get_ce(l_m_M = build_traces(params), payoffs = build_payoffs(params), params)$qaly,\n                           strategies = v_names_str)\n  \n  df_ce[c(\"Cost\", \"QALY\",\"ICER\")] <- c(result$Cost,\n                                result$Effect,\n                                result$ICER)\n  df_ce[\"NMB\"] <- result$Effect * wtp - result$Cost\n  \n  return(df_ce)\n}\n\nmy_owsa_params_range <- data.frame(pars = c(\"cTrtA\", \"pStage3Death\"),\n                                   min = c(8000, 0.3),\n                                   max = c(10500, 0.9))\n\nl_owsa_det = run_owsa_det(params_range = my_owsa_params_range,\n                           params_basecase = params_sc,\n                           nsamp = 2,\n                           FUN = simulate_strategies,\n                           outcomes = c(\"Cost\", \"QALY\", \"ICER\", \"NMB\"),\n                           strategies = v_names_str,\n                           progress = FALSE)\n\nowsaNMBtrtA = l_owsa_det$owsa_NMB[l_owsa_det$owsa_NMB[,\"strategy\"] == \"trtA\",]\nowsaICERtrtA = l_owsa_det$owsa_ICER[l_owsa_det$owsa_ICER[,\"strategy\"] == \"trtA\",]\nowsa_tornado(owsaNMBtrtA)\n```\n\n::: {.cell-output-display}\n![](MarkovDA_files/figure-pdf/owdsa-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nowsa_tornado(owsaICERtrtA)\n```\n\n::: {.cell-output-display}\n![](MarkovDA_files/figure-pdf/owdsa-2.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\n# # Select the net monetary benefit (NMB) owsa object\n# my_owsa_NMB <- l_owsa_det$owsa_NMB\n# \n# # Plot outcome of each strategy over each parameter range\n# plot(my_owsa_NMB,\n#      n_x_ticks = 4)\n# \n# owsa_tornado(l_owsa_det$owsa_NMB)\n# \n# owsa_opt_strat(l_owsa_det$owsa_NMB)\n```\n:::\n",
    "supporting": [
      "MarkovDA_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{float}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage[normalem]{ulem}\n\\usepackage{makecell}\n\\usepackage{xcolor}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}